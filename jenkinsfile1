pipeline {
    agent any  // Run on any available agent

    environment {
        AWS_REGION = 'ap-south-1'  // Set your AWS region
        ECR_URI = '816069160812.dkr.ecr.ap-south-1.amazonaws.com'  // Your ECR URI
        REPOSITORY_NAME = 'sample-webapp'  // Your ECR repository name
        GIT_URL = 'https://github.com/Sumukha97/sample-webapp.git'  // Your GitHub repository URL
        GIT_BRANCH = 'main'  // Update this if your default branch is 'main'
    }

    stages {
        stage('Checkout Code') {
            steps {
                script {
                    echo "Cloning GitHub repository"
                    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                        sh """
                        if [ -d "sample-webapp" ]; then rm -rf sample-webapp; fi
                        git clone https://github.com/Sumukha97/sample-webapp.git
                        cd sample-webapp
                        """
                    }
                }
            }
        }

        stage('Install AWS CLI') {
    steps {
        script {
            echo "Installing AWS CLI v2"

            // Remove any existing AWS CLI installation files or directories
            sh '''
            sudo rm -rf /usr/local/aws-cli
            sudo rm -rf /usr/local/bin/aws
            sudo rm -rf awscliv2.zip aws/
            '''
            
            // Download and install AWS CLI without interaction
            sh '''
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install 
            '''
        }
    }
}


        stage('AWS Configuration') {
            steps {
                script {
                    echo "Configuring AWS CLI"
                    withCredentials([usernamePassword(credentialsId: 'AWS_ACCESS_KEY_ID', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                        sh '''
                        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
                        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
                        aws configure set region ${AWS_REGION}
                        '''
                    }
                }
            }
        }

        stage('ECR Login') {
            steps {
                script {
                    echo "Logging in to AWS ECR"
                    sh """
                    aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_URI}
                    """
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "Building Docker image..."
                    sh 'docker build -t ${REPOSITORY_NAME}:latest .'
                }
            }
        }

        stage('Tag and Push Docker Image') {
            steps {
                script {
                    echo "Tagging and pushing the Docker image to ECR"
                    sh """
                    docker tag ${REPOSITORY_NAME}:latest ${ECR_URI}/${REPOSITORY_NAME}:latest
                    docker push ${ECR_URI}/${REPOSITORY_NAME}:latest
                    """
                }
            }
        }
    }

    post {
        always {
            echo "Cleaning up resources if any"
        }
    }
}
