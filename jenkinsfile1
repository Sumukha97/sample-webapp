pipeline {
    agent any  

    environment {
        AWS_REGION = 'ap-south-1'  
        ECR_URI = '816069160812.dkr.ecr.ap-south-1.amazonaws.com' 
        REPOSITORY_NAME = 'sample-webapp'  
        GIT_URL = 'https://github.com/Sumukha97/sample-webapp.git'  
        GIT_BRANCH = 'main'  
    }

     stages {
        stage('Checkout Code') {
            steps {
                script {
                    echo "Cloning GitHub repository"
                    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                        sh """
                        git clone https://github.com/Sumukha97/sample-webapp.git
                        """
                    }
                }
            }
        }


        stage('Install AWS CLI') {
            steps {
                script {
                    echo "Installing AWS CLI v2"

                    sh '''
                    sudo rm -rf /usr/local/aws-cli
                    sudo rm -rf /usr/local/bin/aws
                    sudo rm -rf awscliv2.zip aws/
                    '''
                    
                    sh '''
                    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                    unzip awscliv2.zip
                    sudo ./aws/install 
                    '''
                }
            }
        }

        stage('AWS Configuration') {
            steps {
                script {
                    echo "Configuring AWS CLI"
                    withCredentials([ 
                        string(credentialsId: 'access_key', variable: 'AWS_ACCESS_KEY_ID'),
                        string(credentialsId: 'secret_key', variable: 'AWS_SECRET_ACCESS_KEY')
                    ]) {
                        sh '''
                        aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
                        aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
                        aws configure set region ${AWS_REGION}
                        '''
                    }
                }
            }
        }

        stage('ECR Login') {
            steps {
                script {
                    echo "Logging in to AWS ECR"
                    withCredentials([ 
                        string(credentialsId: 'access_key', variable: 'AWS_ACCESS_KEY_ID'),
                        string(credentialsId: 'secret_key', variable: 'AWS_SECRET_ACCESS_KEY')
                    ]) {
                        sh """
                        aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
                        aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
                        aws configure set region ${AWS_REGION}
                        aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_URI}
                        """
                    }
                }
            }
        }

        stage('Maven Build') {
            steps {
                script {
                    sh '''
                    mvn clean install
                    '''
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "Building Docker image..."
                    sh 'docker build -t ${REPOSITORY_NAME}:latest .'
                }
            }
        }

        stage('Tag and Push Docker Image') {
            steps {
                script {
                    sh """
                    docker tag ${REPOSITORY_NAME}:latest ${ECR_URI}/${REPOSITORY_NAME}:latest
                    docker push ${ECR_URI}/${REPOSITORY_NAME}:latest
                    """
                }
            }
        }
    }
}
